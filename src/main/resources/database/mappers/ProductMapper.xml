<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.winter.app.products.ProductDAO">
  	<select id="commentTotalCount" resultType="Long" parameterType="ProductCommentPager">
  		SELECT COUNT(BOARDNUM) FROM COMMENTS
  		WHERE BOOKNUMBER=#{bookNumber}
  	</select>
  	
  	<select id="commentList" resultType="ProductCommentDTO" parameterType="ProductCommentPager">
  		SELECT * FROM
  		(
  			SELECT ROWNUM R, C.* FROM
	  		(
	  			SELECT * FROM COMMENTS
	  			WHERE BOOKNUMBER=#{bookNumber}
	  			ORDER BY BOARDNUM DESC
	  		)C
  		)
  		WHERE R BETWEEN #{startRow} AND #{lastRow}
  	</select>
  
  	<insert id="commentAdd" parameterType="ProductCommentDTO">
  		INSERT INTO COMMENTS VALUES
  		(COMMENTS_SEQ.NEXTVAL, #{boardContents}, #{boardWriter}, #{bookNumber}, SYSDATE)
  	</insert>
  
  	<delete id="deleteWishList" parameterType="Map">
  		DELETE WISHLIST WHERE USERNAME=#{userName} AND
  		BOOKNUMBER IN 
  		<foreach collection="ids" item="item" open="(" separator="," close=")">
  			#{item}
  		</foreach>
  		
  	</delete>
  
  	<select id="wishList" parameterType="MemberDTO" resultType="ProductDTO">
  		SELECT * FROM BANKBOOK
		WHERE BOOKNUMBER IN (
		(SELECT BOOKNUMBER
		FROM WISHLIST 
		WHERE USERNAME=#{userName}))	  	
  	</select>
  
  	<insert id="addWish" parameterType="Map">
  		INSERT INTO WISHLIST
  		VALUES(#{bookNumber}, #{userName})
  	</insert>
  
  
  	<select id="getTotalCount" resultType="java.lang.Long" parameterType="Pager">
  		SELECT COUNT(BOOKNUMBER) FROM BANKBOOK
			<where>
				BOOKNUMBER > 0
							
				<choose>
				<when test="kind=='k2'">
				AND BOOKDETAIL LIKE '%'||#{search}||'%'
				</when>
				<otherwise>
				AND BOOKNAME LIKE '%'||#{search}||'%'
				</otherwise>
				</choose>
					
			</where>
  		
  	</select>
  
  	<select id="getList" resultType="ProductDTO" parameterType="Pager">
  		SELECT * FROM
			(
				SELECT ROWNUM R, B.* FROM
					(
						SELECT * 
						FROM BANKBOOK
						<where>
							BOOKNUMBER > 0
							
							<choose>
								<when test="kind=='k2'">
								AND BOOKDETAIL LIKE '%'||#{search}||'%'
								</when>
								<otherwise>
								AND BOOKNAME LIKE '%'||#{search}||'%'
								</otherwise>
							</choose>
							

						</where>
						ORDER BY BOOKNUMBER DESC
					) B
			)
		
		WHERE R BETWEEN #{startRow} AND #{lastRow} 
  		<![CDATA[ ]]>
  	</select>
  	
  	<select id="getDetail" resultMap="getDetailResult" parameterType="ProductDTO">
  		SELECT B.*, BF.* 
  		FROM BANKBOOk B
  			 LEFT JOIN
  			 BANKBOOKFILES BF 
  			 ON (B.BOOKNUMBER=BF.BOOKNUMBER)	
  		WHERE B.BOOKNUMBER = #{bookNumber}
  	</select>
  	
  	<resultMap type="ProductDTO" id="getDetailResult">
  		<id column="BOOKNUMBER" property="bookNumber"/>
  		<result column="BOOKNAME" property="bookName"/>
  		<result column="BOOKRATE" property="bookRate"/>
  		<result column="BOOKDETAIL" property="bookDetail"/>
  		<collection property="fileDTOs" javaType="List" ofType="ProductFileDTO">
  			<id column="FILENUM" property="fileNum"/>
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</collection>
  	</resultMap>
  	
  	<select id="getNum" resultType="Long">
  		SELECT BANKBOOK_SEQ.NEXTVAL FROM DUAL
  	</select>
  	
  	<insert id="add" parameterType="ProductDTO">
  		INSERT INTO BANKBOOK 
  		VALUES (#{bookNumber}, #{bookName}, #{bookRate}, 1, #{bookDetail})
  	</insert>
  	
  	<insert id="addFile" parameterType="ProductFileDTO">
  		INSERT INTO BANKBOOKFILES
  		VALUES (FILES_SEQ.NEXTVAL, #{bookNumber}, #{fileName}, #{oriName})
  	</insert>
  	  	
  	<update id="update" parameterType="ProductDTO">
  		UPDATE BANKBOOK SET 
  			BOOKNAME=#{bookName}, 
  			BOOKRATE=#{bookRate},
  			BOOKDETAIL=#{bookDetail} 
  		WHERE BOOKNUMBER=#{bookNumber}
  	</update>
  	
  	<delete id="delete" parameterType="ProductDTO">
  		DELETE BANKBOOK WHERE BOOKNUMBER=#{bookNumber}
  	</delete>
  	
  	
  	
  </mapper>